#!/bin/bash

config_folder="$HOME/.config/sway"
config_file_name="config"
imports_file_path="$config_folder/imports/imports.conf"

show_help ()
{
	# Display Help
	echo "Manage your swaywm config file."
	echo
	echo "Usage: parse-sway-config <options>"
	echo "options:"
	echo "-c|--config   Path to config folder. Deafult: ~/.config/sway"
	echo "-h|--help     Print this help message."
	echo "-f|--file     Config file name. Default: config"
	echo "-i|--imports  Path to imports file. Default: ~/.config/sway/imports/imports.conf"
	echo
}

get_file_name () {
	# Get the file_name.conf from import file_name.conf;
	name=$(echo $* | sed 's/\(import \)\(.*.conf\)\(;\)/\2/')
    echo "$name"
}

while :; do 
	# Parse cli options.
	case $1 in 
		-h|--help)
			show_help
			exit
			;;
		-c|--config_folder)
			if [ "$2" ]; then
				config_folder=$2
				shift
			else
				echo "ERROR: --config_folder requires a non empty option arguement." ; exit
			fi 
			;;
		-f|--file)
			if [ "$2" ]; then 
				config_file_name=$2
			else 
				echo "ERROR: --file requires a non empty option arguement." ; exit
			fi 
			;;
		-i|--imports)
			if [ "$2" ]; then 
				imports_file_path=$2
			else 
				echo "ERROR: --imports requires a non empty option arguement." ; exit
			fi 
			;;
		-?*)
			echo "ERROR: Unknown arguement: $1 exiting" ; exit
			;;
		*)
			break
	esac

	shift 
done


config_file_path="$config_folder/$config_file_name"

# Find imports file
if [[ -f "$imports_file_path" ]]; then 
	echo "using $imports_file_path as imports file"
else 
	echo "Can't find an imports file .. exiting" ; exit
fi 

# Backup previous config file
if [[ -f "$config_file_path" ]]; then 
	echo "Previous config file found .. moving to $config_folder/config.backup"
	mv "$config_file_path" "$config_folder/config.backup"
fi

# Initiate the new config file
printf "## Generated by sway-config-manager. \n" > "$config_file_path"
printf "## Don't edit directly. \n\n" >> "$config_file_path"


# Parse imports to the config file
exec 3< "$imports_file_path"

until [ "$DONE" ]
do 
	read <&3 line || DONE=1
	cur_file="$config_folder/imports/$(get_file_name $line)"
	if [[ -f "$cur_file" ]]; then 
		cat "$cur_file" >> "$config_file_path"
	else 
		echo "ERROR: Can't find file $cur_file .. ignoring"
	fi
done
